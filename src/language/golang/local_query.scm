(block)                   @scope ; { ... }
(function_declaration)    @scope ; func f() { ... }
(method_declaration)      @scope ; func (r R) f() { ... }
(func_literal)            @scope ; func() { ... }
(if_statement)            @scope ; if true { ... }
(for_statement)           @scope ; for x := range xs { ... }
(expression_case)         @scope ; case "foo": ...
(communication_case)      @scope ; case x := <-ch: ...

(var_spec              name: (identifier) @definition)                   ; var x int = ...
(const_spec            name: (identifier) @definition)                   ; const x int = ...
(parameter_declaration name: (identifier) @definition)                   ; func(x int) { ... }
(short_var_declaration left: (expression_list (identifier) @definition)) ; x, y := ...
(range_clause          left: (expression_list (identifier) @definition)) ; for i := range ... { ... }
(receive_statement     left: (expression_list (identifier) @definition)) ; case x := <-ch: ...